---

---

<navbar>
    <nav class="navbar">
      <div class="title">
        <h1>Construcciones Gómez</h1>
        <p>📞 8128595397</p>
      </div>
      <div class="menu">
        <a href="#home"><span class="bouncing-element">🏠</span>Inicio</a>
        <a href="#gallery"><span class="bouncing-element">🔨</span>Galeria</a>
        <a href="#contact"><span class="bouncing-element">📧</span>Contacto</a>
      </div>
      <button class="menu-toggle" aria-label="Open menu">
        <span class="hamburger"></span>
        <span class="hamburger"></span>
        <span class="hamburger"></span>
      </button>
    </nav>
  </navbar>
  
<style>
   @import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap');

nav {
  border: 1px solid black;
  color: #ededed;
  background: linear-gradient(rgb(36, 36, 36), rgb(7, 7, 7));
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 10vh;
  position: fixed;
  top: 0;
  width: 100%;
  height: auto;
  background-color: #333;
  padding: 10px;
  z-index: 1000;
}

.title p {
  margin: 0 0 15px 15px;
}

h1 {
  margin: 10px;
  font-size: 1.4rem;
  font-family: "Roboto Condensed";
  color: yellow;
}

h1:hover {
  font-size: 1.6rem;
  cursor: pointer;
}

.menu {
  display: flex;
  gap: 10px;
  margin: 10px;
}

.menu a {
  font-size: 18px;
}

.menu a:hover {
  color: yellow;
  filter: drop-shadow(0 0 6px yellow);
  transform: scale(1.1);
}

/* Estilos para el menú hamburguesa */
.menu-toggle {
  display: none;
  flex-direction: column;
  cursor: pointer;
  border: none;
  background: transparent;
  padding: 0;
}

.menu-toggle .hamburger {
  background: yellow;
  height: 3px;
  width: 25px;
  margin: 3px 0;
  transition: 0.3s;
}

/* Menú desplegable en pantallas móviles */
.menu {
  display: flex;
  gap: 60px;
  margin: 10px;
}

.menu.active {
  display: flex;
}

.bouncing-element {
  font-size: 2rem;
  display: inline-block;
  animation: bounce 2s infinite;
}

/* Definición de la animación de rebote */
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0); /* Posición inicial y final */
  }
  
  40% {
    transform: translateY(-15px); /* Subida máxima */
  }
  
  60% {
    transform: translateY(-7px); /* Rebote intermedio */
  }
}

@media (max-width: 500px) {
  .menu {
    display: none;
    flex-direction: column;
    width: 80%; /* Ocupa el 80% del viewport */
    height: 80vh; /* Ocupa toda la altura del viewport */
    text-align: center;
    background-color: #0a0a0a;
    opacity: 0.95;
    position: fixed; /* Asegura que el menú esté fijo en el viewport */
    top: 0;
    left: 50%; /* Alinea el menú a la mitad del viewport horizontalmente */
    transform: translateX(-50%); /* Ajusta la posición horizontal para centrar el menú */
    padding: 10px;
    z-index: 1000;
    overflow-y: auto; /* Permite el desplazamiento si el contenido es más largo que el viewport */
    align-items: center;
    justify-content: center;
    gap: 60px;
    border-radius: 10px;
  }

  .menu a {
    margin-bottom: 10px;
    font-size: 25px;
    color: yellow;
  }

  .menu-toggle {
    display: flex;
  }

  .title h1 {
    font-size: 1.2rem;
  }

  .title p {
    font-size: 14px;
  }
}


</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  if (typeof window !== 'undefined') {
    const menuBtn = document.querySelector('.menu-toggle') as HTMLElement;
    const menuContent = document.querySelector('.menu') as HTMLElement;
    const menuLinks = document.querySelectorAll('.menu a');

    // Verificar que los elementos existen antes de agregar event listeners
    if (menuBtn && menuContent) {
      // Abre el menú al hacer clic en el botón de menú hamburguesa
      menuBtn.addEventListener('click', () => {
        menuContent.classList.toggle('active');
      });

      // Cierra el menú al hacer clic en un enlace
      menuLinks.forEach(link => {
        link.addEventListener('click', () => {
          menuContent.classList.remove('active');
        });
      });
    }

    // Opcional: cerrar el menú si se hace clic fuera del menú
    document.addEventListener('click', (event) => {
      const target = event.target as Node;
      if (target && menuContent && menuBtn && !menuContent.contains(target) && !menuBtn.contains(target)) {
        menuContent.classList.remove('active');
      }
    });
  }
});

</script>
